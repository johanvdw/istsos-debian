/*
 * File: app/view/ObservationEditor.js
 * Date: Wed Mar 21 2012 09:38:32 GMT+0100 (CET)
 *
 * This file was generated by Ext Designer version 1.2.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('istsos.view.ObservationEditor', {
    extend: 'istsos.view.ui.ObservationEditor',

    initComponent: function() {
        var me = this;
        
        var offs = Ext.create('istsos.store.Offerings');
        var procs = Ext.create('istsos.store.gridProceduresList');
        var obsprop = Ext.create('istsos.store.ObservedProperties');
        var services = Ext.create('istsos.store.Services');
        
        me.callParent(arguments);
        
        Ext.getCmp("cmbServices").on("select",function(combo, records, eOpts){
            var o = Ext.getCmp('oeCbOffering');
            o.reset();
            o.disable();
            Ext.getCmp('oeCbObservedProperty').disable();
            Ext.getCmp('oeBegin').disable();
            Ext.getCmp('oeEnd').disable();
            Ext.getCmp('oeBeginTime').disable();
            Ext.getCmp('oeEndTime').disable();
            o.getStore().load({
                url: Ext.String.format('{0}/istsos/services/{1}/offerings/operations/getlist', wa.url, combo.getValue()),
                callback: function(records, operation, success){
                    this.enable();
                },
                scope: o
            });
        });
        
        Ext.getCmp("oeCbOffering").on("select",function(combo, records, eOpts){
            var pr = Ext.getCmp('oeCbProcedure');
            var ob = Ext.getCmp('oeCbObservedProperty');
            pr.reset();
            pr.disable();
            ob.reset();
            ob.disable();
            var srv = Ext.getCmp('cmbServices');
            Ext.getCmp('oeBegin').disable();
            Ext.getCmp('oeEnd').disable();
            Ext.getCmp('oeBeginTime').disable();
            Ext.getCmp('oeEndTime').disable();
            pr.getStore().load({
                url: Ext.String.format('{0}/istsos/services/{1}/offerings/{2}/procedures/operations/memberslist', 
                    wa.url,srv.getValue(),combo.getValue()),
                callback: function(records, operation, success){
                    this.enable();
                },
                scope: pr
            });
        });
        
        
        Ext.getCmp("oeCbProcedure").on("select",function(combo, records, eOpts){
            var o = Ext.getCmp('oeCbObservedProperty');
            o.reset();
            o.disable();
            Ext.getCmp('oeBegin').disable();
            Ext.getCmp('oeEnd').disable();
            Ext.getCmp('oeBeginTime').disable();
            Ext.getCmp('oeEndTime').disable();
            o.getStore().loadData(records[0].data.observedproperties);
            o.enable();
        });
        
        Ext.getCmp("oeCbObservedProperty").on("select",function(combo, records, eOpts){
            Ext.getCmp('oeBegin').enable();
            Ext.getCmp('oeEnd').enable();
            Ext.getCmp('oeBeginTime').enable();
            Ext.getCmp('oeEndTime').enable();
        });
        
        Ext.getCmp('oeBtnLoad').on("click",function(btn, e, eOpts){
            // Prepare chart and editing grid
            // var obs = Ext.create('istsos.store.Observations');
            var properties = Ext.getCmp("oeCbProcedure").getStore().findRecord(
                "name",Ext.getCmp("oeCbProcedure").getValue()
                ).data.observedproperties;
            
            var begin = Ext.getCmp('oeBegin').getValue();
            begin.setHours(Ext.getCmp('oeBeginTime').getValue().getHours());
            begin.setMinutes(Ext.getCmp('oeBeginTime').getValue().getMinutes());
            
            var end = Ext.getCmp('oeEnd').getValue();
            end.setHours(Ext.getCmp('oeEndTime').getValue().getHours());
            end.setMinutes(Ext.getCmp('oeEndTime').getValue().getMinutes());
            
            var procStore = Ext.getCmp("oeCbProcedure").getStore();
            var proc = procStore.getAt(procStore.find("name",Ext.getCmp("oeCbProcedure").getValue())).data;
            
            var cmbObs = Ext.getCmp("oeCbObservedProperty");
            var orecs = cmbObs.getStore().getRange();
            var observedProperties=[];
            for (var r in orecs){
                console.dir(r);
                observedProperties.push(orecs[r].get("name"));
            }
            
            var oec = Ext.create('istsos.view.ObservationEditorColumn', {
                id: "milan",
                istConfig: {
                    "service": Ext.getCmp("cmbServices").getValue(),
                    "offering": Ext.getCmp("oeCbOffering").getValue(),
                    "procedure": proc,
                    "properties": properties,
                    "observedProperties": observedProperties.join(","),
                    "selectedProperty": cmbObs.getValue(),
                    "begin": begin,
                    "end": end
                }
            });
            
            var edPan = Ext.getCmp('oeEditor');
            edPan.removeAll();
            edPan.add(oec);
            //obs.load();
        });
        
    }
});